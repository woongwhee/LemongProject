<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="replyMapper">
    <!-- REPLY 테이블  -->
    <resultMap type="Reply" id="replyResultSet">
        <result column="REPLY_NO" property="replyNo"/>
        <result column="USER_NO" property="userNo"/>
        <result column="FEED_NO" property="feedNo"/>
        <result column="REPLY_CONTENT" property="replyContent"/>
        <result column="REPLY_AT" property="replyAt"/>
        <result column="NICK_NAME" property="nickName"/>
    </resultMap>

    <resultMap type="ReplyAlarm" id="replyAlarmResult">
        <result column="REPLY_NO" property="replyNo"/>
        <result column="USER_NO" property="userNo"/>
        <result column="FEED_NO" property="feedNo"/>
        <result column="REPLY_CONTENT" property="replyContent"/>
        <result column="REPLY_AT" property="replyAt"/>
        <result column="REC_NO" property="recNo"/>
    </resultMap>

    <resultMap type="ReplyAlarmList" id="replyAlarmListResult">
        <result column="ALR_NO" property="alrNo"/>
        <result column="USER_NO" property="userNo"/>
        <result column="REF_TYPE" property="refType"/>
        <result column="REF_NO" property="refNo"/>
        <result column="SEND_USER" property="sendUser"/>
        <result column="ALR_MESSAGE" property="message"/>
        <result column="ALR_AT" property="alrAt"/>
        <result column="READ" property="read"/>
    </resultMap>

    <select id="replyAlarmCount" parameterType="map" resultType="int">
        select count(*) from ALARM WHERE USER_NO=#{userNo} AND REF_TYPE = 3 AND READ = 0 OR
            USER_NO=#{userNo} AND REF_TYPE = 4 AND READ = 0
    </select>
    <update id="replyAlarmRead" parameterType="map">
        UPDATE ALARM SET READ = 1
        WHERE USER_NO = #{userNo} AND REF_TYPE=3 AND REF_NO=#{replyNo}
    </update>

    <select id="replyAlarmList" parameterType="map" resultMap="replyAlarmListResult">
        SELECT
            ALR_NO,
            USER_NO,
            REF_TYPE,
            REF_NO,
            SEND_USER,
            ALR_MESSAGE,
            ALR_AT,
            READ
        FROM ALARM
        WHERE USER_NO= #{userNo} AND REF_TYPE = 3 AND READ=0
        ORDER BY ALR_AT DESC
    </select>

    <select id="heartAlarmList" parameterType="map" resultMap="replyAlarmListResult">
        SELECT
            ALR_NO,
            USER_NO,
            REF_TYPE,
            REF_NO,
            SEND_USER,
            ALR_MESSAGE,
            ALR_AT,
            READ
        FROM ALARM
        WHERE USER_NO= #{userNo} AND REF_TYPE = 4 AND READ=0
        ORDER BY ALR_AT DESC
    </select>

    <insert id="insertReplyAlarm" parameterType="map">
        INSERT INTO ALARM (ALR_NO, USER_NO, REF_TYPE, REF_NO, SEND_USER, ALR_MESSAGE) VALUES
            (SEQ_ALARM.nextval,#{recNo}, 3, #{replyNo},#{userNo}, #{replyContent})
        <!--                    받은 사람                    보낸사람                 -->
    </insert>

    <select id="selectReplyAlarm" parameterType="map" resultMap="replyAlarmResult">
        select
            REPLY_NO,
            R.USER_NO,      <!--보낸 사람-->
            R.FEED_NO,
            REPLY_CONTENT,
            REPLY_AT,
            F.USER_NO AS REC_NO <!--받은 사람-->
        from reply R
                 JOIN FEED F on R.FEED_NO = F.FEED_NO
        where R.FEED_NO =#{feedNo} AND R.USER_NO = #{loginUserNo}
          AND REPLY_AT=(SELECT MAX(REPLY_AT) FROM REPLY)
        ORDER BY REPLY_AT DESC
    </select>


    <!--  피드 댓글 작성  -->
    <insert id="insertFeedReply" parameterType="Map">
        INSERT INTO REPLY (REPLY_NO, USER_NO, FEED_NO, REPLY_CONTENT, REPLY_AT) VALUES
        (SEQ_REPLY.nextval, #{loginUserNo}, #{feedNo}, #{replyContent},SYSDATE)
    </insert>

<!-- 피드 댓글 -->
    <select id="listReply" resultMap="replyResultSet" parameterType="int">
        SELECT
            REPLY_NO, R.USER_NO, FEED_NO, REPLY_CONTENT, REPLY_AT,
            NICK_NAME
        FROM REPLY R
                 JOIN USER_PROFILE UP on R.USER_NO = UP.USER_NO
        WHERE FEED_NO=#{feedNo}
        order by REPLY_AT DESC
    </select>

<!-- 피드 댓글 삭제 -->
    <delete id="deleteReply" parameterType="Map">
        DELETE FROM REPLY WHERE FEED_NO = #{feedNo} AND REPLY_NO=#{replyNo}
    </delete>

<!-- 피드 댓글 갯수-->
    <select id="countReply" parameterType="int" resultType="int">
        SELECT count(*) FROM REPLY WHERE FEED_NO=#{feedNo}
    </select>

</mapper>