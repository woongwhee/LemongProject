<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="feedMapper">
    <!-- FEED 테이블  -->
    <resultMap type="Feed" id="feedResultSet">
        <result column="FEED_NO" property="feedNo"/>
        <result column="USER_NO" property="userNo"/>
        <result column="FEED_CONTENT" property="feedContent"/>
        <result column="FEED_AT" property="feedAt"/>
<!--        <result column="FILEPATH" property="filePath"/>-->
    </resultMap>

    <resultMap  type="Photo" id="photoResultSet">
        <result column="PHOTO_NO" property="photoNo"/>
        <result column="USER_NO" property="userNo"/>
        <result column="ORIGIN_NAME" property="originName"/>
        <result column="CHANGE_NAME" property="changeName"/>
        <result column="FILE_PATH" property="filePath"/>
    </resultMap>

    <resultMap id="feedListResultSet" type="FeedList">
        <result column="FEED_NO" property="feedNo"/>
        <result column="USER_NO" property="userNo"/>
        <result column="FEED_CONTENT" property="feedContent"/>
        <result column="FEED_AT" property="feedAt"/>
        <result column="FILEPATH" property="filePath"/>
        <result column="PHOTONO" property="photoNo"/>
    </resultMap>


<!-- 피드 게시물  -->
    <select id="selectFeed" resultMap="feedListResultSet" >
        SELECT
        F.FEED_NO,
        F.USER_NO,
        F.FEED_CONTENT,
        F.FEED_AT,
        LISTAGG(P.FILE_PATH ||P.CHANGE_NAME,',')WITHIN GROUP(ORDER BY VALUE) AS filePath,
        LISTAGG(FP.PHOTO_NO, ',') WITHIN GROUP ( ORDER BY VALUE) AS photoNo
        FROM FEED F
        JOIN FEED_PHOTO FP on F.FEED_NO = FP.FEED_NO
        JOIN PHOTO P on FP.PHOTO_NO = P.PHOTO_NO
        GROUP BY F.FEED_NO, F.USER_NO, F.FEED_CONTENT, F.FEED_AT
        order by F.FEED_AT DESC
    </select>

<!-- 피드 작성  -->
    <insert id="insertFeed" parameterType="FeedInsert">
        <selectKey keyProperty="feedNo" resultType="int" order="BEFORE">
            SELECT SEQ_FEED.nextval from dual
        </selectKey>
        INSERT INTO FEED (FEED_NO, USER_NO, FEED_CONTENT, FEED_AT) VALUES
        (#{feedNo}, #{userNo},#{feedContent},sysdate)
    </insert>

<!--  피드 수정  -->
    <update id="updateFeed" parameterType="Map">
        UPDATE FEED SET FEED_CONTENT = #{feedContent} where FEED_NO = #{feedNo}
    </update>
<!--  피드 사진 수정  -->
    <update id="updateFeedPhoto" parameterType="Map">

    </update>

<!--  피드 삭제  -->
    <delete id="deleteFeed" parameterType="Map">
        DELETE FROM FEED WHERE FEED_NO = #{feedNo}
    </delete>
<!-- 피드 사진 삭제   -->
    <delete id="deleteFeedPhotoFeedNo">
        DELETE FROM FEED_PHOTO WHERE FEED_NO = #{feedNo}
    </delete>
<!-- 사진 등록 -->
    <insert id="insertPhoto" parameterType="Photo">
        <selectKey keyProperty="photoNo" resultType="int" order="BEFORE">
            SELECT SEQ_PHOTO.nextval from dual
        </selectKey>
        INSERT INTO PHOTO (PHOTO_NO, USER_NO, ORIGIN_NAME, CHANGE_NAME, FILE_PATH) VALUES
        (#{photoNo},#{userNo}, #{originName},#{changeName},#{filePath})
    </insert>
<!--  사진 삭제  -->
    <delete id="deletePhoto" parameterType="int">
        DELETE FROM PHOTO WHERE PHOTO_NO=#{photoNo}
    </delete>

<!--  피드 사진 넣기  -->
    <insert id="insertFeedPhoto" parameterType="site.lemongproject.web.feed.model.dto.FeedInsertPhoto">
        INSERT INTO FEED_PHOTO (FEED_NO, PHOTO_NO, VALUE) VALUES (#{feedNo},#{photoNo},#{value})
    </insert>


<!--  피드 사진 수정  -->
    <select id="maxValue" parameterType="Map" resultType="int">
        SELECT MAX(VALUE) FROM FEED_PHOTO
        WHERE
        FEED_NO=(SELECT FEED_NO FROM FEED_PHOTO WHERE PHOTO_NO = #{photoNo})
    </select>
    <select id="nowValue" parameterType="Map" resultType="int">
        SELECT VALUE FROM FEED_PHOTO
        WHERE
        FEED_NO=(SELECT FEED_NO FROM FEED_PHOTO WHERE PHOTO_NO = #{photoNo})
        AND
        PHOTO_NO= #{photoNo}
    </select>

    <update id="updateValueFirst" parameterType="Map">
        UPDATE FEED_PHOTO SET VALUE = VALUE-1 WHERE FEED_NO = (SELECT FEED_NO FROM FEED_PHOTO WHERE PHOTO_NO = #{photoNo}) AND (SELECT VALUE FROM FEED_PHOTO WHERE PHOTO_NO = #{photoNo}) = 1
    </update>
    <update id="updateValueMiddle" parameterType="Map">
        UPDATE FEED_PHOTO SET VALUE = VALUE-1 WHERE
        PHOTO_NO IN (SELECT PHOTO_NO FROM FEED_PHOTO WHERE (VALUE > (SELECT VALUE FROM FEED_PHOTO WHERE PHOTO_NO = #{photoNo}))
        AND
        FEED_NO=(SELECT FEED_NO FROM FEED_PHOTO WHERE  PHOTO_NO= #{photoNo}))
    </update>
    <update id="updateValueLast" parameterType="Map">
        UPDATE FEED_PHOTO SET VALUE = VALUE-1 WHERE FEED_NO = (SELECT FEED_NO FROM FEED_PHOTO WHERE  PHOTO_NO= #{photoNo}) AND
        (SELECT Max(VALUE) from FEED_PHOTO where FEED_NO = (SELECT FEED_NO FROM FEED_PHOTO WHERE PHOTO_NO = #{photoNo})) = (SELECT VALUE FROM FEED_PHOTO WHERE PHOTO_NO = #{photoNo})
    </update>
    <delete id="deleteFeedPhoto" parameterType="Map">
        DELETE FROM FEED_PHOTO where PHOTO_NO = #{photoNo}
    </delete>

</mapper>